generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Category {
  id String @id(map: "category_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  key     String    @unique @default("")
  name    String    @default("")
  Project Project[]
  Uses    Use[]

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@map("categories")
}

model Repository {
  id String @id(map: "repository_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name String
  url  String?

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  Project Project[]

  @@map("repositories")
}

model Project {
  id String @id(map: "project_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name            String
  development_url String?
  production_url  String?

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  category_id String?   @db.Uuid
  category    Category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  repository_id String?     @db.Uuid
  repository    Repository? @relation(fields: [repository_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("projects")
}

model Social {
  id String @id(map: "social_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name   String
  url    String
  mailto String?

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@map("socials")
}

model Use {
  id String @id(map: "use_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name        String  @unique @default("")
  description String?
  link        Boolean @default(false)
  link_label  String?
  link_url    String?

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  category_id String?   @db.Uuid
  category    Category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("uses")
}

model Company {
  id String @id(map: "company_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  name     String  @unique @default("")
  logotype String?

  address String?
  phone   String?
  regon   String?
  nip     String?

  isContractor Boolean? @default(false)
  isClient     Boolean? @default(false)

  workplace Workplace[]

  @@map("companies")
}

model Workplace {
  id String @id(map: "workplace_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  title       String  @default("")
  description String?

  present    Boolean @default(false)
  start      String? @default("")
  start_full String? @default("")
  end        String? @default("")
  end_full   String? @default("")

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  company_id String?  @db.Uuid
  company    Company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("workplaces")
}

model Page {
  id String @id(map: "page_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  title      String  @unique @default("")
  subheading String? @default("")
  heading    String? @default("")
  content    String? @default("")

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  route_id String? @unique @db.Uuid
  route    Route?  @relation(fields: [route_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("pages")
}

model Route {
  id String @id(map: "navigation_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  label  String  @unique @default("")
  href   String  @default("")
  hidden Boolean @default(false)
  Page   Page?

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@map("routes")
}

model Setting {
  id String @id(map: "setting_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  description String? @default("")
  image       String? @default("")
  title       String? @default("")

  phone    String? @default("")
  email    String? @default("")
  postcode String? @default("")
  address  String? @default("")
  city     String? @default("")
  country  String? @default("")
  birtday  String? @default("")

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@map("settings")
}

model Meta {
  id String @id(map: "meta_pkey") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid

  content String @default("")
  name    String @default("")

  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)

  @@map("metas")
}
